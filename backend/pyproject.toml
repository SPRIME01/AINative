[project]
name = "AINative"
version = "0.1.0"
description = "Edge AI Orchestrator Backend"
readme = "README.md"
requires-python = ">=3.10,<4.0"
dependencies = [
    "copilotkit",
    "dspy",
    "fastapi[standard]<1.0.0,>=0.114.2",
    "python-multipart<1.0.0,>=0.0.7",
    "email-validator<3.0.0.0,>=2.1.0.post1",
    "passlib[bcrypt]<2.0.0,>=1.7.4",
    "tenacity<9.0.0,>=8.2.3",
    "pydantic>2.0",
    "fastapi-mcp",
    "google-adk",
    "emails<1.0,>=0.6",
    "jinja2<4.0.0,>=3.1.4",
    "alembic<2.0.0,>=1.12.1",
    "httpx<1.0.0,>=0.25.1",
    "psycopg[binary]<4.0.0,>=3.1.13",
    "sqlmodel<1.0.0,>=0.0.21",
    "bcrypt==4.0.1",
    "pydantic-settings<3.0.0,>=2.2.1",
    "sentry-sdk[fastapi]<2.0.0,>=1.40.6",
    "pyjwt<3.0.0,>=2.8.0",
    "tailwindcss",
    "uvicorn[standard]",
    "loguru",
    "opentelemetry-sdk",
    "opentelemetry-instrumentation-fastapi",
    "opentelemetry-exporter-otlp",
    "python-dotenv",
    "litellm",
    "openai",
    "tritonclient"
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/ainative"]

[tool.uv]
dev-dependencies = [
    "pytest<8.0.0,>=7.4.3",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "mypy<2.0.0,>=1.8.0",
    "ruff<1.0.0,>=0.2.2",
    "pre-commit<4.0.0,>=3.6.2",
    "types-passlib<2.0.0.0,>=1.7.7.20240106",
    "coverage<8.0.0,>=7.4.3",
    "types-PyYAML",
    "httpx<1.0.0,>=0.25.1",
    "pytest-asyncio<1.0.0,>=0.21.0",
]

[tool.pytest.ini_options]
minversion = "7.0"
pythonpath = ["src"]
testpaths = ["tests"]
addopts = [
    "--strict-config",
    "--strict-markers",
    "-ra",
    "--cov=ainative",
    "--cov-report=term-missing",
    "--cov-report=xml:coverage.xml",
    "--cov-report=html:cov_html",
    "--junitxml=pytest-report.xml"
]
python_files = "test_*.py *_test.py"
python_classes = "Test* Describe*"
python_functions = "test_* it_*"
markers = [
    "slow: marks tests as slow to run",
    "integration: marks integration tests",
    "unit: marks unit tests"
]
filterwarnings = [
    "error",
]

[tool.coverage.run]
source = ["ainative"]
branch = true
omit = [
    "src/ainative/app/infrastructure/main.py",
    "*/__init__.py",
    "*/tests/*",
    "*/migrations/*",
]

[tool.coverage.report]
show_missing = true
fail_under = 80
skip_covered = true
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "def main():"
]

[tool.mypy]
python_version = "3.10"
strict = true
exclude = ["venv", ".venv", "docs", "cov_html", "alembic"]
ignore_missing_imports = true
warn_return_any = true
warn_unused_configs = true

[tool.ruff]
target-version = "py310"
exclude = ["alembic", "venv", ".venv", "docs", "cov_html"]
line-length = 88

[tool.ruff.lint]
select = [
    "E",
    "W",
    "F",
    "I",
    "B",
    "C4",
    "UP",
    "ARG001",
    "PT",
    "PYI"
]
ignore = [
    "E501",
    "B008",
    "W191",
    "B904",
    "S101"
]
per-file-ignores = {"__init__.py" = ["F401"], "tests/*" = ["S101", "ARG001"]}
pyupgrade = {keep-runtime-typing = true}
